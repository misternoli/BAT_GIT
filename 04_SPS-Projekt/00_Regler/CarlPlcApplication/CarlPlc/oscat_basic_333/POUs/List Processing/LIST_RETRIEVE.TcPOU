<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.7">
  <POU Name="LIST_RETRIEVE" Id="{fd51a913-f3f2-41b7-a6ab-390509cbe570}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION LIST_RETRIEVE : STRING(LIST_LENGTH)
VAR_INPUT
	SEP : BYTE;
	POS : INT;
END_VAR

VAR
	i :	INT;
	o : INT := 1;
	w : INT := 1;
	pt : POINTER TO ARRAY[1..LIST_LENGTH] OF BYTE;
	po : POINTER TO ARRAY[1..LIST_LENGTH] OF BYTE;
	cnt: INT := 0;
	c: BYTE;
END_VAR


(*
version 2.0		21. mar. 2011
programmer 	hugo
tested by		oscat

LIST_RETRIEVE liefert das element an der stelle pos einer liste und löscht das element aus der liste.
die liste liegt als string von elementen vor die mit den zeichen SEP separiert sind.

*)
(*All VAR_IN_OUT variables have been moved to the end of the declaration due to compatibility reasons*)
VAR_IN_OUT
	LIST : STRING(LIST_LENGTH);
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* load pointers *)
pt := ADR(LIST);
po := ADR(LIST_RETRIEVE);

IF pos > 0 THEN
	FOR i := 1 TO LIST_LENGTH DO
		c := pt^[i];
		IF c = 0 THEN
			po^[o] := 0;
			IF cnt < pos THEN pt^[w + 1] := 0; ELSE pt^[w] := 0; END_IF;
			RETURN;
		ELSIF cnt = pos AND c <> SEP THEN				(* we have found the element *)
			po^[o] := pt^[i];
			o := o + 1;
		ELSIF cnt >= pos THEN
			pt^[w] := c;
			w := w + 1;
		ELSE
			w := i;
		END_IF;
		IF c = sep THEN cnt := cnt + 1; END_IF;
	END_FOR;
ELSE
	LIST_RETRIEVE := '';
END_IF;


(* revision histroy
hm	28. jun. 2008	rev 1.0
	original release

hm	19. jan. 2011	rev 1.1
	changed string(255) to string(LIST_LENGTH)

hm	21. mar. 2011	rev 2.0
	all elements start with SEP
*)	
]]></ST>
    </Implementation>
    <LineIds Name="LIST_RETRIEVE">
      <LineId Id="30" Count="37" />
    </LineIds>
  </POU>
</TcPlcObject>