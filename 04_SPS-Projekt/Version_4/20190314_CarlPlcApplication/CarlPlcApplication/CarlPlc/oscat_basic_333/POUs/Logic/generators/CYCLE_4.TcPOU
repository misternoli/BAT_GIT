<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.7">
  <POU Name="CYCLE_4" Id="{d5030330-9163-4247-925f-f6cb51c11c25}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK CYCLE_4
VAR_INPUT
	E : BOOL := TRUE;
	T0, T1, T2, T3 : TIME;
	S0 : BOOL;
	SX : INT;
	SL : BOOL;
END_VAR
VAR_OUTPUT
	STATE : INT;
END_VAR
VAR
	tx : TIME;
	last : TIME;
	init: BOOL;
END_VAR


(*
version 1.0	
programmer 	hugo
tested by	oscat


 
*)]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* read system timer *)
tx := DWORD_TO_TIME(T_PLC_MS());
(* init on first cycle *)
IF NOT init THEN
	init := TRUE;
	last := tx;
END_IF;

IF E THEN
	IF SL THEN
		(* when sx > 0 then the state sx is forced to start *)
		state:= LIMIT(0,SX,3);
		last := tx;
		(* this is to avoid to reset sx from the calling programm it does work fine on codesys but i am not sure about other systems, because we are writing to an input *)
		SL := FALSE;
	ELSE
		CASE state OF
			0 :	(* wait for T0 and switch to next cycle *)
				IF tx - last >= T0 THEN
					state := 1;
					last := tx;
				END_IF;
			1 : (* wait for T1 over 1st cycle *)
				IF tx - last >= T1 THEN
					state := 2;
					last := tx;
				END_IF;
			2 : (* wait for T1 over 1st cycle *)
				IF tx - last >= T2 THEN
					state := 3;
					last := tx;
				END_IF;
			3 : (* wait for T2 over 2nd cycle *)
				IF tx - last >= T3 THEN
					IF S0 THEN State := 0; END_IF; (* if S0 is false, the sequence stops at state 3 *)
					last := tx;
				END_IF;
		END_CASE;
	END_IF;
ELSE
	state := 0;
	last := tx;
END_IF;



(*
hm	3. nov. 2008	rev 1.0
	original version

*)]]></ST>
    </Implementation>
    <LineIds Name="CYCLE_4">
      <LineId Id="26" Count="50" />
    </LineIds>
  </POU>
</TcPlcObject>