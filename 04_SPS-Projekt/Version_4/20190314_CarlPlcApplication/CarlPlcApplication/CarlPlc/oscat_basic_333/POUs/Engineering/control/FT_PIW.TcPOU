<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.7">
  <POU Name="FT_PIW" Id="{600ac1b4-6347-4963-bdef-05922336ac14}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FT_PIW
VAR_INPUT
	IN : REAL;
	KP : REAL := 1.0;
	KI : REAL := 1.0;
	LIM_L : REAL := -1E38;
	LIM_H : REAL := 1E38;
	RST : BOOL;
END_VAR
VAR_OUTPUT
	Y : REAL;
	LIM : BOOL;
END_VAR
VAR
	integ : FT_INT;
END_VAR

(*
version 1.0	3. jun 2008
programmer 	hugo
tested by		tobias

FT_PIW is a PI controller.
The PID controller works according to the fomula Y = IN *(KP+ KI * INTEG(e) ).
a rst will reset the integrator to 0
ilim_h and iLim_l set the possible output range of the internal integrator.
the output flag lim will signal that the output limits are active.
the controller is equipped with anti wind_up circuitry that stops the integrator when lim_h or lim_l is reached


default values for KP = 1, KI = 1, ILIM_L = -1E37, iLIM_H = +1E38.
*)
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* run integrator *)
integ(IN := IN, K := KI, RUN := NOT LIM, RST := RST);

(* set output value *)
Y := KP * IN + integ.Out;

(* check for limits and set integrator for anti wind up *)
IF Y < LIM_L THEN
	Y := LIM_L;
	LIM := TRUE;
ELSIF Y > LIM_H THEN
	Y := LIM_H;
	LIM := TRUE;
ELSE
	LIM := FALSE;
END_IF;



(* revision history
hm 	3. jun. 2008 	rev 1.0
	original version


*)]]></ST>
    </Implementation>
    <LineIds Name="FT_PIW">
      <LineId Id="33" Count="24" />
    </LineIds>
  </POU>
</TcPlcObject>