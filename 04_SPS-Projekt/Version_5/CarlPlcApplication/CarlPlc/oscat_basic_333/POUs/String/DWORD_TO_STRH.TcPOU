<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.7">
  <POU Name="DWORD_TO_STRH" Id="{65d1303c-bb63-4319-9cec-654ad46440d3}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION DWORD_TO_STRH : STRING(8)
VAR_INPUT
	IN : DWORD;
END_VAR
VAR
	i : INT;
	temp : BYTE;
	pt : POINTER TO BYTE;
END_VAR

(*
version 1.3	29. mar. 2008
programmer 	hugo
tested by	tobias

DWORD_TO_STRINGH converts a DWORD to a String of Hexadecimal represented by '0' .. '9' and 'A' .. 'F'.
The lowest order Character will be on the right and the high order Character on the left.

*)
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* read output adress to pointer *)
pt := ADR(DWORD_TO_STRH) + 8;
(* wirte the closing byte for the string *)
pt^:= 0;

(* write the 8 hex characters backwards *)
FOR i := 1 TO 8 DO;
	(* decrement the pointer *)
	pt := pt - 1;
	(* read the lowest order hex value *)
	temp := DWORD_TO_BYTE(in AND 16#0000000F);
	(* convert value to hex character *)
	IF temp <= 9 THEN temp := temp + 48; ELSE temp := temp + 55; END_IF;
	(* write character to output string *)
	PT^ := temp;
	(* shift in for nect hex character *)
	in := SHR(in,4);
END_FOR;


(* code beofre rev 1.2
FOR i := 1 TO 8 DO
	X := DWORD_TO_BYTE(in AND 2#1111);
	IF X <= 9 THEN X := X + 48; ELSE X := X + 55; END_IF;
	Cx := CHR(X);
	temp := CONCAT(Cx, temp);
	in := SHR(in,4);
END_FOR;
DWORD_TO_STRH := temp;
*)


(* revision history
hm	9. jun. 2007	rev 1.0		
	original version 

hm	11. sep. 2007	rev 1.1
	changed coding for compatibility with twincat, concat cannot support a function as an argument.

hm	15. dec. 2007	rev 1.2
	changed code for better performance

hm	29. mar. 2008	rev 1.3
	changed STRING to STRING(8)

*)
]]></ST>
    </Implementation>
    <LineIds Name="DWORD_TO_STRH">
      <LineId Id="20" Count="46" />
    </LineIds>
  </POU>
</TcPlcObject>